<?php
/**
 * @file
 * Adds support for Onelogin's Simple SAML toolkit for PHP.
 * https://github.com/onelogin/php-saml
 */

/**
 * Implements hook_libraries_info().
 */
function bt_onelogin_saml_libraries_info() {
  $libraries['php-saml'] = array(
    'name' => 'Onelogin php-saml',
    'vendor url' => 'http://onelogin.com/',
    'download url' => 'https://github.com/onelogin/php-saml/releases/tag/v2.6.0',
    'version arguments' => array(
      'file' => 'CHANGELOG',
      'pattern' => '@v[\.]([0-9a-zA-Z\.-]+)@',
      'lines' => 4,
      'cols' => 80,
    ),
    'versions' => array(
      '2.6.0' => array(),
    ),
    'files' => array(
      'php' => array(
        '_toolkit_loader.php',
      ),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_menu().
 */
function bt_onelogin_saml_menu() {
  $items['admin/config/system/onelogin_saml'] = array(
    'title' => 'Onelogin SAML Toolkit Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('saml_toolkit_settings'),
    'access arguments' => array('administer onelogin saml'),
    'file' => 'bt_onelogin_saml.admin.inc',
  );

  $items['onelogin_saml/metadata'] = array(
    'title' => 'SAML Metadata XML',
    'page callback' => 'saml_toolkit_metadata',
    'access callback' => 'saml_metadata_access',
    'file' => 'bt_onelogin_saml.pages.inc',
  );

  $items['onelogin_saml/acs'] = array(
    'title' => 'Onelogin SAML assertion consumer service',
    'page callback' => 'saml_toolkit_acs',
    'access callback' => 'user_is_anonymous',
    'file' => 'bt_onelogin_saml.services.inc',
  );
  $items['onelogin_saml/sls'] = array(
    'title' => 'Onelogin SAML single logout service',
    'page callback' => 'saml_toolkit_sls',
    'access callback' => 'user_is_logged_in',
    'file' => 'bt_onelogin_saml.services.inc',
  );
  $items['onelogin_saml/sso'] = array(
    'title' => 'Onelogin SAML single sign on service',
    'page callback' => 'saml_toolkit_sso',
    'access callback' => 'user_is_anonymous',
    'file' => 'bt_onelogin_saml.services.inc',
  );

  return $items;
}

/**
 * Implements hook_menu_alter().
 */
function bt_onelogin_saml_menu_alter(&$items) {
  $items['user/logout']['page callback'] = 'saml_user_logout';
}

/**
 * Implements hook_permission().
 */
function bt_onelogin_saml_permission() {
  return array(
    'administer onelogin saml' => array(
      'title' => t('Administer Onelogin SAML'),
      'description' => t('Administer Onelogin SAML Toolkit settings.'),
    ),
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function bt_onelogin_saml_form_user_login_block_alter(&$form, &$form_state) {
  _bt_onelogin_saml_user_login_form_alter($form, $form_state);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function bt_onelogin_saml_form_user_login_alter(&$form, &$form_state) {
  _bt_onelogin_saml_user_login_form_alter($form, $form_state);
}

function _bt_onelogin_saml_user_login_form_alter(&$form, &$form_state) {
  // Verify we have the IdP settings we need.
  $entity_id = variable_get('bt_onelogin_saml_idp_entityid', FALSE);
  $sso_url = variable_get('bt_onelogin_saml_idp_sso_url', FALSE);
  if ($entity_id && $sso_url) {
    $items = array();
    $items[] = array(
      'data' => l(
        t('Log in using !entity_id', array('!entity_id' => $entity_id)),
        'onelogin_saml/sso', array(
          'attributes' => array('class' => array('onelogin-saml-link')),
          'query' => drupal_get_destination(),
        )
      ),
    );

    // Add IdP login link to user login form.
    $form['bt_onelogin_saml_links'] = array(
      '#theme' => 'item_list__onelogin_saml_links',
      '#items' => $items,
      '#attributes' => array('class' => array('onelogin-saml-links')),
      '#weight' => 1,
    );

    $form['links']['#weight'] = 2;
  }
}

/**
 * Returns php-saml library settings.
 *
 * @return array
 *   Settings array for sp and idp.
 */
function bt_onelogin_saml_get_settings() {
  return array(
    'sp' => array(
      'entityId' => variable_get('bt_onelogin_saml_sp_entityid'),
      'assertionConsumerService' => array(
        'url' => variable_get('bt_onelogin_saml_sp_acs_url'),
      ),
      'singleLogoutService' => array(
        'url' => variable_get('bt_onelogin_saml_sp_sls_url'),
      ),
      'NameIDFormat' => variable_get('bt_onelogin_saml_sp_nameidformat'),
    ),
    'idp' => array(
      'entityId' => variable_get('bt_onelogin_saml_idp_entityid'),
      'singleSignOnService' => array(
        'url' => variable_get('bt_onelogin_saml_idp_sso_url'),
      ),
      'singleLogoutService' => array(
        'url' => variable_get('bt_onelogin_saml_idp_sls_url'),
      ),
      'x509cert' => variable_get('bt_onelogin_saml_idp_x509cert'),
    ),
  );
}

/**
 * Loads the php-saml library.
 *
 * @return OneLogin_Saml2_Auth
 *   OneLogin_Saml2_Auth instance.
 */
function bt_onelogin_saml_get_instance() {
  $instance = &drupal_static(__FUNCTION__);
  if (!$instance) {
    $library = libraries_load('php-saml');
    if ($library && !empty($library['loaded'])) {
      $saml_settings = bt_onelogin_saml_get_settings();
      $instance = new OneLogin_Saml2_Auth($saml_settings);
    }
  }
  return $instance;
}

/**
 * SAML Metadata XML.
 *
 * @param array $errors
 *   An array, passed by reference, to store any errors.
 *
 * @return string
 *   The metadata xml.
 */
function bt_onelogin_saml_get_metadata(&$errors = array()) {
  $metadata = '';
  $library = libraries_load('php-saml');
  if ($library && !empty($library['loaded'])) {
    try {
      $settings = new OneLogin_Saml2_Settings(bt_onelogin_saml_get_settings(), TRUE);
      $metadata = $settings->getSPMetadata();
      foreach ($settings->validateMetadata($metadata) as $error) {
        $errors[] = $error;
      }
    }
    catch (\Exception $e) {
      // Eat it.
    }

  }
  return $metadata;
}

/**
 * Access callback to access a page which returns the SAML Metadata XML.
 *
 * @return bool
 *   TRUE if access, FALSE otherwise.
 */
function saml_metadata_access() {
  return variable_get('bt_onelogin_saml_anon_metadata', user_access('administer onelogin saml'));
}

/**
 * Page callback for user logout in SAML and Drupal.
 */
function saml_user_logout() {
  $session_index = isset($_SESSION['samlSessionIndex']) ?
    $_SESSION['samlSessionIndex'] : NULL;

  if ($session_index) {
    // Check for a response from IdP.
    $saml_response = NULL;
    if (array_key_exists('SAMLResponse', $_REQUEST)) {
      $saml_response = $_REQUEST['SAMLResponse'];
    }
    if (!$saml_response && array_key_exists('SAMLResponse', $_POST)) {
      $saml_response = $_POST['SAMLResponse'];
    }

    if ($saml_response) {
      // SLO request may have passed or failed on IdP, but we still log the user
      // out.
      user_logout();
    }
    else {
      module_load_include('inc', 'bt_onelogin_saml', 'bt_onelogin_saml.services');
      saml_toolkit_sls($session_index);
    }
  }
  else {
    user_logout();
  }
}
